{
  "openapi": "3.1.0",
  "info": {
    "title": "FlowScale ComfyUI API",
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "https://your-deployment-api-url.pod.flowscale.ai",
      "description": "Pod #your-pod (Default)"
    },
    {
      "url": "{apiEndpoint}",
      "description": "Deployed API Endpoint",
      "variables": {
        "apiEndpoint": {
          "default": "https://your-domain.com",
          "description": "Your project's deployed API endpoint"
        }
      }
    }
  ],
  "paths": {
    "/api/v1/comfy/health": {
      "get": {
        "tags": ["comfy"],
        "summary": "Comfyui Health Check",
        "description": "Checks the health status of all ComfyUI instances within the specified cluster. It verifies whether each ComfyUI instance is running or stopped.",
        "operationId": "comfyui_health_check_api_v1_comfy_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComfyHealthCheckResponseWrapper"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/comfy/queue": {
      "get": {
        "tags": ["comfy"],
        "summary": "Get Queue",
        "description": "Retrieves the queue data for all ComfyUI instances in the cluster. This includes information about running and pending tasks in each instance's queue.",
        "operationId": "get_queue_api_v1_comfy_queue_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComfyQueueResponseWrapper"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/runs": {
      "post": {
        "tags": ["run"],
        "summary": "Execute Workflow",
        "description": "Executes a specified workflow by processing dynamic form data with field names and types determined by the deployed ComfyUI workflow. Each workflow defines its own unique input parameters based on the nodes it contains.\n\n**Important**: The exact parameter names and types vary for each workflow_id and deployment URL. To discover the required parameters for your workflow:\n1. Check your workflow's **API Deployment Dashboard**\n2. Refer to your ComfyUI workflow's input nodes\n\nThe workflow is executed on an available ComfyUI instance within the cluster based on queue size limits.",
        "operationId": "execute_workflow_api_v1_runs_post",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "workflow_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workflow Id"
            }
          },
          {
            "name": "group_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Group Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComfyRunResponseWrapper"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "custom_field_1": {
                    "type": "string",
                    "description": "Replace 'custom_field_1' with your actual parameter name. Example: 'prompt', 'style', 'model_name'",
                    "example": "your_value_here"
                  },
                  "custom_field_2": {
                    "type": "number",
                    "description": "Replace 'custom_field_2' with your numeric parameter name. Example: 'strength', 'cfg_scale', 'temperature'",
                    "example": 7.5
                  },
                  "custom_field_3": {
                    "type": "integer",
                    "description": "Replace 'custom_field_3' with your integer parameter name. Example: 'steps', 'seed', 'width', 'height'",
                    "example": 20
                  },
                  "custom_file_upload": {
                    "type": "string",
                    "format": "binary",
                    "description": "Replace 'custom_file_upload' with your file parameter name. Example: 'input_image', 'reference_image', 'mask'"
                  }
                },
                "additionalProperties": {
                  "oneOf": [
                    { "type": "string" },
                    { "type": "number" },
                    { "type": "integer" },
                    { "type": "boolean" },
                    { "type": "string", "format": "binary" }
                  ]
                },
                "description": "⚠️ **IMPORTANT**: The field names shown below are placeholders. You must replace them with the actual parameter names required by your specific workflow.\n\n**To find your workflow's parameter names:**\n1. **API Docs**: Check your deployment's auto-generated API Deployment Dashboard  \n3. **ComfyUI Workflow**: Look at the input nodes in your workflow\n\n**Note**: Different workflows have completely different parameter names and types."
              },
              "encoding": {
                "custom_file_upload": {
                  "contentType": "image/*,video/*,audio/*"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["run"],
        "summary": "Get Runs",
        "description": "Retrieves a list of all runs associated with a specific group ID. Useful for aggregating and managing related runs.",
        "operationId": "get_runs_api_v1_runs_get",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "group_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Group Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunListResponseWrapper"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/output": {
      "get": {
        "tags": ["run"],
        "summary": "Get Output",
        "description": "Retrieves the output of a specific run by providing the filename. It checks the run's status and returns a download URL if the output is available.",
        "operationId": "get_output_api_v1_runs_output_get",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "filename",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Filename"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunOutputResponseWrapper"
                }
              }
            }
          },
          "204": {
            "description": "No Output Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/{run_id}": {
      "get": {
        "tags": ["run"],
        "summary": "Get Run",
        "description": "Retrieves detailed information about a specific run using its unique run ID.",
        "operationId": "get_run_api_v1_runs__run_id__get",
        "security": [
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunDetailResponseWrapper"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ComfyHealthCheckResponse": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": ["url", "status"],
        "title": "ComfyHealthCheckResponse"
      },
      "ComfyHealthCheckResponseWrapper": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/ComfyHealthCheckResponse"
            },
            "type": "array",
            "title": "Data"
          },
          "errors": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errors"
          },
          "meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          }
        },
        "type": "object",
        "required": ["status", "data"],
        "title": "ComfyHealthCheckResponseWrapper"
      },
      "ComfyQueueResponseItem": {
        "properties": {
          "comfy_uri": {
            "type": "string",
            "title": "Comfy Uri"
          },
          "queue": {
            "type": "object",
            "title": "Queue"
          }
        },
        "type": "object",
        "required": ["comfy_uri", "queue"],
        "title": "ComfyQueueResponseItem"
      },
      "ComfyQueueResponseWrapper": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/ComfyQueueResponseItem"
            },
            "type": "array",
            "title": "Data"
          },
          "errors": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errors"
          },
          "meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          }
        },
        "type": "object",
        "required": ["status", "data"],
        "title": "ComfyQueueResponseWrapper"
      },
      "ComfyRunResponse": {
        "properties": {
          "run_id": {
            "type": "string",
            "title": "Run Id"
          },
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id"
          }
        },
        "type": "object",
        "required": ["run_id", "workflow_id"],
        "title": "ComfyRunResponse"
      },
      "ComfyRunResponseWrapper": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/ComfyRunResponse"
            },
            "type": "array",
            "title": "Data"
          },
          "errors": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errors"
          },
          "meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          }
        },
        "type": "object",
        "required": ["status", "data"],
        "title": "ComfyRunResponseWrapper"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "RunDetailResponse": {
        "properties": {
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id"
          },
          "group_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "inputs": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Inputs"
          },
          "output_names": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Output Names"
          },
          "outputs": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Outputs"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          }
        },
        "type": "object",
        "required": [
          "workflow_id",
          "group_id",
          "status",
          "inputs",
          "output_names",
          "outputs",
          "created_at",
          "started_at",
          "completed_at"
        ],
        "title": "RunDetailResponse"
      },
      "RunDetailResponseWrapper": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "$ref": "#/components/schemas/RunDetailResponse"
          },
          "errors": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errors"
          },
          "meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          }
        },
        "type": "object",
        "required": ["status", "data"],
        "title": "RunDetailResponseWrapper"
      },
      "RunListResponse": {
        "properties": {
          "group_id": {
            "type": "string",
            "title": "Group Id"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "runs": {
            "items": {
              "$ref": "#/components/schemas/RunDetailResponse"
            },
            "type": "array",
            "title": "Runs"
          }
        },
        "type": "object",
        "required": ["group_id", "count", "runs"],
        "title": "RunListResponse"
      },
      "RunListResponseWrapper": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "$ref": "#/components/schemas/RunListResponse"
          },
          "errors": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errors"
          },
          "meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          }
        },
        "type": "object",
        "required": ["status", "data"],
        "title": "RunListResponseWrapper"
      },
      "RunOutputResponse": {
        "properties": {
          "download_url": {
            "type": "string",
            "title": "Download Url"
          },
          "generation_status": {
            "type": "string",
            "title": "Generation Status"
          }
        },
        "type": "object",
        "required": ["download_url", "generation_status"],
        "title": "RunOutputResponse"
      },
      "RunOutputResponseWrapper": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "data": {
            "$ref": "#/components/schemas/RunOutputResponse"
          },
          "errors": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errors"
          },
          "meta": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          }
        },
        "type": "object",
        "required": ["status", "data"],
        "title": "RunOutputResponseWrapper"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "APIKeyHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY"
      }
    }
  }
}
